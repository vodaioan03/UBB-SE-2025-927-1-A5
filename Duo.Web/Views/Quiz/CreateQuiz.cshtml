@{
    ViewData["Title"] = "Create New Quiz";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var selectedExerciseIds = TempData.Peek("SelectedExerciseIds") as List<int> ?? new List<int>();
    var availableExercises = ViewBag.AvailableExercises as IEnumerable<DuoClassLibrary.Models.Exercises.Exercise> ?? new List<DuoClassLibrary.Models.Exercises.Exercise>();
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Create New Quiz</h2>
        <a asp-controller="Admin"
           asp-action="Index"
           class="btn btn-outline-secondary btn-sm">
            ← Back
        </a>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <p>@error.ErrorMessage</p>
            }
        </div>
    }

    <form asp-controller="Quiz" asp-action="CreateQuizConfirmed" method="post">
        @Html.AntiForgeryToken()

        @foreach (var id in selectedExerciseIds)
        {
            <input type="hidden" name="SelectedExerciseIds" value="@id" />
        }

        <h5 class="mb-3">Selected Exercises</h5>
        <div class="border rounded p-4 mb-3 dark-box" style="min-height:200px">
            @if (!selectedExerciseIds.Any())
            {
                <p><em>No exercises selected yet.</em></p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var id in selectedExerciseIds)
                    {
                        var ex = availableExercises.FirstOrDefault(e => e.ExerciseId == id);
                        <li id="exercise-@id" class="list-group-item bg-dark text-light d-flex justify-content-between align-items-center">
                            <span>@ex?.Question (ID: @id)</span>

                            <button type="button"
                                    class="btn btn-sm btn-outline-danger"
                                    onclick="removeExercise(@id)">
                                Remove
                            </button>
                        </li>
                    }
                </ul>
            }
        </div>

        <div class="text-end mb-4">
            <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addExerciseModal">
                Add Exercise
            </button>
        </div>

        <div class="text-end">
            <button type="submit" class="btn btn-success">Save Quiz</button>
        </div>
    </form>


    <div class="modal fade" id="addExerciseModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content bg-dark text-light" id="exerciseModalContent">
            </div>
        </div>
    </div>

</div>

@section Styles {
    <style>
        body {
            background: #121212;
            color: #f8f9fa;
        }

        .dark-box {
            background: #1e1e1e;
            border-color: #444;
            color: #f8f9fa;
        }

        form.m-0.p-0 {
            display: inline;
        }
    </style>
}

@section Scripts {
    <script>
        document.querySelector('[data-bs-target="#addExerciseModal"]').addEventListener('click', async () => {
            const response = await fetch('/Quiz/GetAvailableExercisesModal');
            const html = await response.text();
            document.getElementById('exerciseModalContent').innerHTML = html;
        });

                async function removeExercise(exerciseId) {
            const response = await fetch('/Quiz/RemoveSelectedExercise', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ exerciseId })
            });

            if (response.ok) {
                const result = await response.json();
                document.getElementById(`exercise-${exerciseId}`).remove();
                const hidden = document.querySelector(`input[type="hidden"][name="SelectedExerciseIds"][value="${exerciseId}"]`);
                if (hidden) hidden.remove();
            } else {
                alert("Failed to remove exercise.");
            }
        }

    </script>
}

